(require "testing/nassert")

(defun setup-test ()
  (nc-add-macro 'boo #'(lambda (x y) `(+ ,x ,y)))
  (nc-add-macro 'who #'(lambda (x y) `(boo ,x ,y)))
  (nc-add-macro 'woo #'(lambda (x) `(who ,x ,x))))

(defun teardown-test ()
  (nc-remove-macro 'boo)
  (nc-remove-macro 'who)
  (nc-remove-macro 'woo)
  nil)

(defun test-nc-macroexpand-1 ()
  (setup-test)
  (assert-equal (nc-macroexpand-1 '(who (boo 3 4) (who (boo 4 5) 7)))
                '(boo (boo 3 4) (who (boo 4 5) 7)))
  (assert-equal (nc-macroexpand-1 '(boo (boo 3 4) (who (boo 4 5) 7)))
                '(+ (boo 3 4) (who (boo 4 5) 7)))
  (assert-equal (nc-macroexpand-1 '(+ (boo 3 4) (who (boo 4 5) 7)))
                '(+ (+ 3 4) (boo (boo 4 5) 7)))
  (assert-equal (nc-macroexpand-1 '(+ (+ 3 4) (boo (boo 4 5) 7)))
                '(+ (+ 3 4) (+ (boo 4 5) 7)))
  (assert-equal (nc-macroexpand-1 '(+ (+ 3 4) (+ (boo 4 5) 7)))
                '(+ (+ 3 4) (+ (+ 4 5) 7)))
  (assert-equal (nc-macroexpand-1 '(woo (woo 3))) '(who (woo 3) (woo 3)))
  (assert-equal (nc-macroexpand-1 '(who (woo 3) (woo 3))) '(boo (woo 3) (woo 3)))
  (assert-equal (nc-macroexpand-1 '(boo (woo 3) (woo 3))) '(+ (woo 3) (woo 3)))
  (assert-equal (nc-macroexpand-1 '(+ (woo 3) (woo 3))) '(+ (who 3 3) (who 3 3)))
  (assert-equal (nc-macroexpand-1 '(+ (who 3 3) (who 3 3))) '(+ (boo 3 3) (boo 3 3)))
  (assert-equal (nc-macroexpand-1 '(+ (boo 3 3) (boo 3 3))) '(+ (+ 3 3) (+ 3 3)))
  (teardown-test))

(defun test-nc-macroexpand ()
  (setup-test)
  (assert-equal (nc-macroexpand '(who (boo 3 4) (who (boo 4 5) 7)))
                '(+ (+ 3 4) (+ (+ 4 5) 7)))
  (assert-equal (nc-macroexpand '(woo 3)) '(+ 3 3))
  (assert-equal (nc-macroexpand '(woo (woo 3))) '(+ (+ 3 3) (+ 3 3)))
  (teardown-test))
