(defun test-match ()
  (assert-equal (nolisp:match '?x 1) '((?x . 1)))
  (assert-equal (nolisp:match :x 1) '((:x . 1)))
  (assert-equal (nolisp:match '?x '(abc 1)) '((?x . (abc 1))))
  (assert-equal (nolisp:match '(?x) '(1)) '((?x . 1)))
  (assert-equal (nolisp:match '(?x) '(1 2)) nil)
  (assert-equal (nolisp:match '(?x 2) '(1 2)) '((?x . 1)))
  (assert-equal (nolisp:match '(1 ?x) '(1 2)) '((?x . 2)))
  (assert-equal (nolisp:match '(2 ?x) '(1 2)) nil)
  (assert-equal (nolisp:match '(?x ?x) '(2 2)) '((?x . 2)))
  (assert-equal (nolisp:match '(?x ?x) '(1 2)) nil)
  (assert-equal (nolisp:match '(a ?x 1) '(a xyz 1)) '((?x . xyz)))
  (assert-equal (nolisp:match '(a ?x 1) '(b xyz 1)) nil)
  (assert-equal (nolisp:match '(a (foo ?x) 1) '(a (foo (a b)) 1)) '((?x . (a b))))
  (assert-equal (nolisp:match '(a :x 1) '(a xyz 1)) '((:x . xyz)))
  ;; now with different keyword predicates
  (assert-equal (nolisp:match '(a ?x :y 2) '(a b 1 2))
		'((:y . 1) (?x . b)))
  (assert-equal (nolisp:match '(a ?x :y 2) '(a ?x 1 2) :varp #'keywordp)
		'((:y . 1)))
  (assert-equal (nolisp:match '(a ?x :y d) '(a b :y d) :varp #'nolisp::question-sym?)
		'((?x . b)))
  (assert-equal (nolisp:match '(a ?x :y 2) '(a ?x :y 3) :varp #'numberp)
		'((2 . 3)))
  (assert-equal (nolisp:match '(a ?x :y 2) '(a b :y 2) :allow-keywords nil)
		'((?x . b))))

;;; todo really test the failed test assertions

(defun test-assert-match ()
  (assert-match '(a a c c) '(?a ?a :b :b))
  (assert-match '(a a :b :b) '(?a ?a :b :b) :msg "without keywords" :allow-keywords nil)
  (assert-match '(?a ?a :b :b) '(?a ?a :b :b) :msg "with predicate" :varp #'nolisp::question-sym?)
  (assert-match '(?a ?a :b :b) '(?a ?a :b :b) :msg "with keywordp predicate" :varp #'keywordp)
)

(defun test-assert-matches ()
  (assert-matches '(((a 1 2 3) (a ?x :y 3))
		    ((a x x) (a ?b ?b)))
		  :fn #'identity)
  (assert-matches '(((1 1 :y 3) (?x ?x :y 3)))
		  :fn #'identity :allow-keywords nil)
  (assert-matches '(((a 1 :y 3) (w x y z))
		    ((a :y :y 3) (w x x z)))
		  :fn #'identity :varp #'atom))

(defun test-assert-mismatch ()
  (assert-mismatch '(a b c d) '(?a ?a c d))
  (assert-mismatch '(?a ?a c d) '(?a ?a :c :c) :msg "without keywords" :allow-keywords nil)
  (assert-mismatch '(a b c d) '(?a ?a c d) :msg "with a predicate" :varp #'nolisp::question-sym?)
  (assert-mismatch '(a b) '(?a ?a c)))

(defun test-assert-mismatches ()
  (assert-mismatches '(((b 1 2 3) (a ?x :y 3))
		       ((a x y) (a ?b ?b)))
		     :fn #'identity)
  (assert-mismatches '(((1 2 :y 3) (?x ?x :y 3)))
		     :fn #'identity :allow-keywords nil)
  (assert-mismatches '(((a 1 :y 3) (w x y z))
		       ((a :y :y 3) (w x x z)))
		     :fn #'identity :varp #'keywordp))

(defun test-matching ()
  (test-match)
  (test-assert-match)
  (test-assert-matches)
  (test-assert-mismatch)
  (test-assert-mismatches)
  t)
